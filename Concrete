View(concrete)
##attach(concrete)
install.packages("neuralnet")
library(neuralnet)

normalize<- function(x){
  return((x-min(x))/(max(x)-min(x)))
}
concrete_norm<- as.data.frame(lapply(concrete,normalize))
#concrete_norm<-scale(concrete)

concrete_train<-concrete_norm[1:773,]
concrete_test<-concrete_norm[774:1030,]

#simple ANN with only single hidden neuron 
concrete_model<-neuralnet(formula= strength ~ cement + slag + ash+water + superplastic + coarseagg +fineagg + age,
                          data= concrete_train)

##visualize the network topology

plot(concrete_model)

##evaluating model performnce --
#obtain model results 
model_results<-compute(concrete_model,concrete_test[1:8])

#obtain predicted strength value 
predicted_strength<- model_results$net.result

#examine the corelation btween predicted and actual values 
cor(predicted_strength, concrete_test$strength)

##improv model performc
#a more complex neural networks topology with 5 hiddn neural 
concrete_model2<-neuralnet(strength~cement + slag + ash+water + superplastic + coarseagg +fineagg + age,
                           data= concrete_train,hidden = c(5,2))

##plot the network
windows()
plot(concrete_model2)

model_results2<-compute(concrete_model2,concrete_test[1:8])
predicted_strength2<-model_results2$net.result
cor(predicted_strength2, concrete_test$strength)
